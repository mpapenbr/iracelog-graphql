// Code generated by BobGen psql v0.40.2. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/stephenafamo/bob/clause"
	"github.com/stephenafamo/bob/dialect/psql"
	"github.com/stephenafamo/bob/dialect/psql/dialect"
)

var (
	SelectWhere     = Where[*dialect.SelectQuery]()
	UpdateWhere     = Where[*dialect.UpdateQuery]()
	DeleteWhere     = Where[*dialect.DeleteQuery]()
	OnConflictWhere = Where[*clause.ConflictClause]() // Used in ON CONFLICT DO UPDATE
)

func Where[Q psql.Filterable]() struct {
	CCars       cCarWhere[Q]
	CCarDrivers cCarDriverWhere[Q]
	CCarEntries cCarEntryWhere[Q]
	CCarTeams   cCarTeamWhere[Q]
	Events      eventWhere[Q]
	Tenants     tenantWhere[Q]
	Tracks      trackWhere[Q]
} {
	return struct {
		CCars       cCarWhere[Q]
		CCarDrivers cCarDriverWhere[Q]
		CCarEntries cCarEntryWhere[Q]
		CCarTeams   cCarTeamWhere[Q]
		Events      eventWhere[Q]
		Tenants     tenantWhere[Q]
		Tracks      trackWhere[Q]
	}{
		CCars:       buildCCarWhere[Q](CCars.Columns),
		CCarDrivers: buildCCarDriverWhere[Q](CCarDrivers.Columns),
		CCarEntries: buildCCarEntryWhere[Q](CCarEntries.Columns),
		CCarTeams:   buildCCarTeamWhere[Q](CCarTeams.Columns),
		Events:      buildEventWhere[Q](Events.Columns),
		Tenants:     buildTenantWhere[Q](Tenants.Columns),
		Tracks:      buildTrackWhere[Q](Tracks.Columns),
	}
}
