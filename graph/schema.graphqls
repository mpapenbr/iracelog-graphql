# iRacelog GraphQL schema
#
#

type Event {
  id: ID!
  name: String!
  key: String!
  recordDate: Time
  eventDate: Time
  teamRacing: Boolean
  multiClass: Boolean
  numCarTypes: Int
  numCarClasses: Int
  raceloggerVersion: String
  iRacingSessionId: Int
  track: Track # will be changed to non-null. For event 23 (NEC Race) the track 262 is not in the DB
  teams: [EventTeam!]
  drivers: [EventDriver!]!
}

type User {
  id: ID!
  name: String!
}

type Track {
  id: ID!
  name: String!
  shortName: String!
  configName: String
  numSectors: Int
  pitlaneLength: Float!
  length: Float!
  events: [Event!]
}

type EventTeam {
  name: String!
  carNum: String!
  drivers: [EventDriver]!
}

"This models a driver in a concrete event"
type EventDriver {
  name: String!
  carNum: String!
}

"This models a more 'generic' driver with participation in events and teams."
type Driver {
  "The driver name used"
  name: String!
  "The teams in which the driver was a member"
  teams: [Team!]!
  "The events in which the driver participated"
  events: [Event!]!
  "The car numbers used by this driver"
  carNum: [String!]!
  "The car classes used by this driver"
  carClass: [String!]!
}

"This models a more 'generic' driver with participation in events and teams."
type Team {
  name: String!
  drivers: [Driver!]!
  carNum: [String!]!
  carClass: [String!]!
  teams: [EventTeam!]!
  events: [Event!]!
}

type Query {
  getEvents(
    limit: Int = 10
    offset: Int
    sort: [EventSortArg!] = [{ field: RECORD_DATE, order: DESC }]
  ): [Event!]!
  getTracks(
    limit: Int = 10
    offset: Int
    sort: [TrackSortArg!] = [{ field: NAME, order: ASC }]
  ): [Track!]!
  track(id: ID!): Track
  events(ids: [ID!]!): [Event!]!
  tracks(ids: [ID!]!): [Track!]!
  "searches for drivers in events. arg is a RegEx"
  searchDriver(arg: String!): [Driver!]
  "searches for teams in events. arg is a RegEx"
  searchTeam(arg: String!): [Team!]
}

enum SortOrder {
  ASC
  DESC
}
enum EventSortField {
  NAME
  RECORD_DATE
  TRACK
}

enum TrackSortField {
  ID
  NAME
  SHORT_NAME
  LENGTH
  PITLANE_LENGTH
  NUM_SECTORS
}

input EventSortArg {
  field: EventSortField!
  order: SortOrder
}

input TrackSortArg {
  field: TrackSortField!
  order: SortOrder
}

scalar Time
